'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = require('./index');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// 数据请求示例
var RequestManager = function () {
  function RequestManager() {
    _classCallCheck(this, RequestManager);
  }

  _createClass(RequestManager, null, [{
    key: 'fetchGet1',

    /**
     * get 请求例子
     */
    value: function fetchGet1(data) {
      var u = (0, _index.setUrlSearchParams)(data);
      return (0, _index.fetch)('/video/v5video/item/search.htm?' + u, {
        credentials: 'include'
      });
    }

    /**
     * post 请求例子
     */

  }, {
    key: 'fetchPost1',
    value: function fetchPost1(data) {
      return (0, _index.fetch)('/video/v5video/item/add.htm', {
        method: 'POST',
        body: (0, _index.setFormData)(data),
        credentials: 'include'
      });
    }

    /**
     * jsonp 请求例子
     */

  }, {
    key: 'fetchJsonpSample',
    value: function fetchJsonpSample(tags) {
      return (0, _index.fetchJsonp)('/common/jsonp/getTagName.htm?', { tags: tags });
    }
  }, {
    key: 'fetchGet2',
    value: function fetchGet2(data) {
      return (0, _index.fetchGet)('/video/v5video/item/search.htm?', data);
    }
  }, {
    key: 'fetchPost2',
    value: function fetchPost2(data) {
      return (0, _index.fetchPost)('/video/v5video/item/add.htm', data);
    }
  }, {
    key: 'getToken',
    value: function getToken() {
      return (0, _index.fetchGet)('/common/getToken.json');
    }
  }, {
    key: 'setChannelKey',
    value: function setChannelKey(data) {
      return (0, _index.fetchPost)('/cms/main/page_setup/channel/changeKey.json', data);
    }
  }]);

  return RequestManager;
}();

RequestManager.getToken().then(function (data) {
  return console.log('=======fetchGet====== ', data);
});

RequestManager.setChannelKey({ id: 1, name: 'haha' }).then(function (data) {
  return console.log('=======fetchPost====== ', data);
});

RequestManager.fetchGet1().then(function (data) {
  return console.log('=======fetchGet====== ', data);
});

RequestManager.fetchPost1().then(function (data) {
  return console.log('=======fetchPost====== ', data);
});

RequestManager.fetchJsonpSample('5').then(function (data) {
  return console.log('=======getTagName====== ', data);
});

RequestManager.fetchGet2().then(function (data) {
  return console.log('=======fetchGet====== ', data);
});

RequestManager.fetchPost2().then(function (data) {
  return console.log('=======fetchPost====== ', data);
});